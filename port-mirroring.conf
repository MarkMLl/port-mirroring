#
# source_ports defines the mirrored interface, for example, 'wlan0' will mirror
# all wireless traffic. Multiple interfaces are supported (i.e. 'wlan0,eth0')
# up to a hard-coded maximum (originally 4, currently 8).
#
# The syntax of the filter expression is defined by libpcap in userspace, this
# might differ from the kernel implementation used by the iptables bpf extension
# and possibly other kernel subsystems. It may be tested by e.g.
#
#	tcpdump -d '(host 90.155.86.117) && (tcp port 25)'
#
# target defines the mirror target, it can be a local interface or (more often)
# a remote ip address and should expect traffic using either the TZSP protocol
# or a simple TEE.
#
# Save this as  /etc/config/port-mirroring  or identify explicitly by e.g.
#
#	port-mirroring -c /etc/port-mirroring.conf
#
# Later versions modified by MarkMLl also search for /etc/port-mirroring.conf and
# have numerous enhancements including VLAN and Netfilter logging support. The
# examples below assume these are available.

# All traffic on a slice's primary interface:

# config 'port-mirroring'
#	option source_ports 'eth0'
#	option filter ''
#	option target '172.27.205.5'
#	option protocol 'TZSP'

# Ditto except not explicitly going to the downstream system:

# config 'port-mirroring'
#	option source_ports 'eth0'
#	option filter 'not net 172.27.0.0/16'
#	option target '172.27.205.5'
#	option protocol 'TZSP'

# All traffic on a slice's Ethernet or PPP bearer interface:

# config 'port-mirroring'
#	option source_ports 'eth1,ppp0'
#	option filter ''
#	option target '172.27.205.5'
#	option protocol 'TZSP'

# All traffic from e.g. a specified ADSL modem:

# config 'port-mirroring'
#	option source_ports 'eth0'
#	option filter 'ether host 00:50:7F:F4:22:BE'
#	option target '172.27.205.5'
#	option protocol 'TZSP'

# PPPoE traffic piggybacked on a slice's Ethernet primary interface (note order):

# config 'port-mirroring'
#	option source_ports 'eth0'
#	option filter 'pppoed || pppoes'
#	option target '172.27.205.5'
#	option protocol 'TZSP'

# An L2TP tunnel on a slice's bearer interface:

# config 'port-mirroring'
#	option source_ports 'eth1'
#	option filter 'udp port 1701'
#	option target '172.27.205.5'
#	option protocol 'TZSP'

# All traffic being carried by an L2TP tunnel

# config 'port-mirroring'
#	option source_ports 'ppp13'
#	option filter ''
#	option target '172.27.205.5'
#	option protocol 'TZSP'

# All traffic on 3x router interfaces (out of 4x max, later 8x):

# config 'port-mirroring'
#	option source_ports 'eth1.200,eth1.201,eth1.250'
#	option filter ''
# #	'(udp port 53) || (udp port 123)'
#	option target '172.27.205.5'
#	option protocol 'TZSP'

# DHCP traffic piggybacked on a slice's primary interface:

# config 'port-mirroring'
#	option source_ports 'eth0'
#	option filter 'portrange 67-68'
#	option target '172.27.205.5'
#	option protocol 'TZSP'

config 'port-mirroring'
	option source_ports 'eth0'
	option filter 'tcp[tcpflags] & (tcp-syn) != 0'
	option target '172.27.205.5'
	option protocol 'TZSP'

# Traffic being intercepted by Netfilter:

# config 'port-mirroring'
#	option source_ports 'NFL9090'
#	option filter ''
#	option target '172.27.205.5'
#	option protocol 'TZSP'

# In the case of Netfilter logging, NFL at the start of the source_ports name
# is magical and the remainder of the name is the (decimal) group number. The
# log prefix (assumed to be a number that will fit in 16 bits) is appended to
# any mark that has been applied to the logged packet (assumed to be 32 bits)
# and processed in lieu of the 48-bit MAC address otherwise used to indentify
# the originating system. For example, assuming that $iface is an interface's
# name and $ifnum is the digits stripped from the end of it:
#
# iptables -t mangle -A POSTROUTING -o $iface -m mark ! --mark 0x0000/0xffff
#			-j NFLOG --nflog-group 9090 --nflog-prefix $ifnum

# On the system identified as 'target' above, either Wireshark etc. should
# be listening on UDP port 37008 (0x9090) or there should be a DNAT pinhole
# to a Wireshark system, the port number is not configurable (wishlist: make
# it so).

# See http://biot.com/capstats/bpf.html for filter syntax, noting in particular
# that reference to vlan or pppoes (but not pppoed) changes the decoding offset
# making complex expressions order-sensitive. Hence something like
#
#	option filter 'pppoes || pppoed'
#
# will probably not function as expected, while the equivalent
#
#	option filter '(ether proto 0x8864) || (ether proto 0x8863)'
#
# will be more reliable since the decoding offset will not be adjusted.

